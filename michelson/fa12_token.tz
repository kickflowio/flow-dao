parameter (or (or (or (pair %approve (address %spender) (nat %value)) (unit %disableMint)) (or (pair %getAdministrator unit (contract address)) (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (pair %getBalance address (contract nat))))) (or (or (pair %getBalanceAt (pair (address %address) (nat %level)) (contract nat)) (or (pair %getTotalSupply unit (contract nat)) (pair %mint (address %address) (nat %value)))) (or (address %setAdministrator) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (pair %update_metadata (string %key) (bytes %value))))));
storage   (pair (pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))));
code
  {
    CAST (pair (or (or (or (pair address nat) unit) (or (pair unit (contract address)) (or (pair (pair address address) (contract nat)) (pair address (contract nat))))) (or (or (pair (pair address nat) (contract nat)) (or (pair unit (contract nat)) (pair address nat))) (or address (or (pair address (pair address nat)) (pair string bytes))))) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))); # pair (or (or (or (pair address nat) unit) (or (pair unit (contract address)) (or (pair (pair address address) (contract nat)) (pair address (contract nat))))) (or (or (pair (pair address nat) (contract nat)) (or (pair unit (contract nat)) (pair address nat))) (or address (or (pair address (pair address nat)) (pair string bytes))))) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
    # Global variable: takeSnapshot # pair (or (or (or (pair address nat) unit) (or (pair unit (contract address)) (or (pair (pair address address) (contract nat)) (pair address (contract nat))))) (or (or (pair (pair address nat) (contract nat)) (or (pair unit (contract nat)) (pair address nat))) (or address (or (pair address (pair address nat)) (pair string bytes))))) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
    LAMBDA
      (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
      (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
      {
        # __operations__ = sp.local("__operations__", sp.list([]), sp.TList(sp.TOperation)) # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        NIL operation; # list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SWAP;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
        # __storage__ = sp.local("__storage__", lparams_0.in_storage, sp.TRecord(administrator = sp.TAddress, balances = sp.TBigMap(sp.TAddress, sp.TRecord(approvals = sp.TMap(sp.TAddress, sp.TNat), balance = sp.TNat).layout(("approvals", "balance"))), metadata = sp.TBigMap(sp.TString, sp.TBytes), mintingDisabled = sp.TBool, snapshots = sp.TBigMap(sp.TAddress, sp.TMap(sp.TNat, sp.TRecord(balance = sp.TNat, level = sp.TNat).layout(("level", "balance")))), token_metadata = sp.TBigMap(sp.TNat, sp.TRecord(token_id = sp.TNat, token_info = sp.TMap(sp.TString, sp.TBytes)).layout(("token_id", "token_info"))), totalSupply = sp.TNat).layout((("administrator", ("balances", "metadata")), (("mintingDisabled", "snapshots"), ("token_metadata", "totalSupply"))))) # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
        DUP;        # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
        DUG 2;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        # if ~ (self.data.snapshots.contains(lparams_0.in_param)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 4;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # address : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        MEM;        # bool : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF
          {}
          {
            # self.data.snapshots[lparams_0.in_param] = {0 : sp.record(level = 0, balance = 0)} # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PUSH (option (map nat (pair nat nat))) (Some {Elt 0 (Pair 0 0)}); # option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 7;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UPDATE;     # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        # if self.data.snapshots[lparams_0.in_param][sp.as_nat(sp.len(self.data.snapshots[lparams_0.in_param]) - 1)].level == sp.level: # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        LEVEL;      # @level : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SWAP;       # big_map address (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 5;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # address : big_map address (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET;        # option (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {
            # of_some: Get-item:183 # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            PUSH int 183; # int : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        PUSH nat 1; # nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # big_map address (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 7;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # address : big_map address (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET;        # option (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {
            # of_some: Get-item:183 # @some : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            PUSH int 183; # int : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SIZE;       # nat : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SUB;        # int : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        ISNAT;      # option nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {}
          {
            PUSH int 187; # int : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET;        # option (pair nat nat) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {
            # of_some: Get-item:187 # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            PUSH int 187; # int : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # nat : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        COMPARE;    # int : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        EQ;         # bool : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF
          {
            # self.data.snapshots[lparams_0.in_param][sp.as_nat(sp.len(self.data.snapshots[lparams_0.in_param]) - 1)].balance = self.data.balances[lparams_0.in_param].balance # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 8;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # address : address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUG 2;      # address : big_map address (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 188; # int : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PUSH nat 1; # nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 9;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CDR;        # big_map address (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 12;     # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {
                # of_some: Get-item:183 # @some : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                PUSH int 183; # int : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SIZE;       # nat : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SUB;        # int : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            ISNAT;      # option nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 188; # int : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUG 2;      # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (pair nat nat) : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 188; # int : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 8;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # big_map address (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 10;     # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            CAR;        # address : big_map address (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            GET;        # option (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            IF_SOME
              {
                # of_some: Get-item:188 # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
              }
              {
                PUSH int 188; # int : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
                FAILWITH;   # FAILED
              }; # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            CDR;        # nat : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE 2;   # @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SOME;       # option (pair nat nat) : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # @some : option (pair nat nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # map nat (pair nat nat) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SOME;       # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # address : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
            PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
          }
          {
            # self.data.snapshots[lparams_0.in_param][sp.len(self.data.snapshots[lparams_0.in_param])] = sp.record(level = sp.level, balance = self.data.balances[lparams_0.in_param].balance) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 8;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # address : address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUG 2;      # address : big_map address (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 190; # int : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 7;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # big_map address (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 10;     # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {
                # of_some: Get-item:191 # @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                PUSH int 191; # int : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CDR;        # nat : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            LEVEL;      # @level : nat : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair @level nat : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SOME;       # option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 7;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CDR;        # big_map address (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 9;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            CAR;        # address : big_map address (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            GET;        # option (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            IF_SOME
              {
                # of_some: Get-item:183 # @some : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
              }
              {
                PUSH int 183; # int : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
                FAILWITH;   # FAILED
              }; # @some : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SIZE;       # nat : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # map nat (pair nat nat) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SOME;       # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # address : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
            PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
          }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
        UNIT;       # unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
        # sp.result(sp.record(operations = sp.operations(), result = __s118.value, storage = self.data)) # unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
        DIG 2;      # list operation : unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
        PAIR 3;     # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
      }; # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair (or (or (or (pair address nat) unit) (or (pair unit (contract address)) (or (pair (pair address address) (contract nat)) (pair address (contract nat))))) (or (or (pair (pair address nat) (contract nat)) (or (pair unit (contract nat)) (pair address nat))) (or address (or (pair address (pair address nat)) (pair string bytes))))) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
    SWAP;       # pair (or (or (or (pair address nat) unit) (or (pair unit (contract address)) (or (pair (pair address address) (contract nat)) (pair address (contract nat))))) (or (or (pair (pair address nat) (contract nat)) (or (pair unit (contract nat)) (pair address nat))) (or address (or (pair address (pair address nat)) (pair string bytes))))) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
    UNPAIR;     # or (or (or (pair address nat) unit) (or (pair unit (contract address)) (or (pair (pair address address) (contract nat)) (pair address (contract nat))))) (or (or (pair (pair address nat) (contract nat)) (or (pair unit (contract nat)) (pair address nat))) (or address (or (pair address (pair address nat)) (pair string bytes)))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
    IF_LEFT
      {
        IF_LEFT
          {
            DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : or (pair address nat) unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
            DROP;       # or (pair address nat) unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
            IF_LEFT
              {
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                # == approve ==
                # if ~ (self.data.balances.contains(sp.sender)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                GET 3;      # big_map address (pair (map address nat) nat) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                MEM;        # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF
                  {}
                  {
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    # self.data.balances[sp.sender] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                # sp.verify((self.data.balances[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'FA1.2_UnsafeAllowanceChange') # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                PUSH nat 0; # nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                GET 3;      # big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                GET;        # option (pair (map address nat) nat) : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF_SOME
                  {
                    # of_some: Get-item:140 # @some : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    PUSH int 140; # int : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    FAILWITH;   # FAILED
                  }; # @some : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # map address nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DUP 3;      # pair address nat : map address nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # address : map address nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                GET;        # option nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF_SOME
                  {
                    # of_some: Get-item:140 # @some : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    PUSH nat 0; # nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                COMPARE;    # int : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                EQ;         # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF
                  {
                    PUSH bool True; # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    DUP;        # pair address nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CDR;        # nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PUSH nat 0; # nat : nat : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    COMPARE;    # int : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    EQ;         # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF
                  {}
                  {
                    PUSH string "FA1.2_UnsafeAllowanceChange"; # string : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    FAILWITH;   # FAILED
                  }; # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                # self.data.balances[sp.sender].approvals[params.spender] = params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                IF_SOME
                  {}
                  {
                    PUSH int 142; # int : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                    FAILWITH;   # FAILED
                  }; # @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                DUP 8;      # pair address nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat
                DIG 8;      # pair address nat : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }
              {
                DROP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                # == disableMint ==
                # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SENDER;     # @sender : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                COMPARE;    # int : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                EQ;         # bool : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    FAILWITH;   # FAILED
                  }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                # self.data.mintingDisabled = True # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                CDR;        # big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                PUSH bool True; # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))
                SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
            NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DROP;       # pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract address)
                # == getAdministrator ==
                # sp.result(self.data.administrator) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract address)
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract address)
                DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # address : pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                # sp.transfer(__s119.value, sp.tez(0), sp.snd(params)) # address : pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                NIL operation; # list operation : address : pair unit (contract address) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DIG 2;      # pair unit (contract address) : list operation : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CDR;        # contract address : list operation : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                PUSH mutez 0; # mutez : contract address : list operation : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DIG 3;      # address : mutez : contract address : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DROP;       # pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat)
                    # == getAllowance ==
                    # if self.data.balances.contains(sp.fst(params).owner): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat)
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat)
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    GET 3;      # big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DUG 2;      # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # pair address address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    MEM;        # bool : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    IF
                      {
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat)
                        # sp.result(self.data.balances[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat)
                        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat)
                        DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET 3;      # big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUG 2;      # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # pair address address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:160 # @some : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 160; # int : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # map address nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair (pair address address) (contract nat) : map address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : map address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUG 2;      # pair (pair address address) (contract nat) : map address nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # pair address address : map address nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CDR;        # address : map address nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:160 # @some : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH nat 0; # nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }; # nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }
                      {
                        # sp.result(0) # pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        PUSH nat 0; # nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }; # nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # sp.transfer(__s120.value, sp.tez(0), sp.snd(params)) # nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    NIL operation; # list operation : nat : pair (pair address address) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DIG 2;      # pair (pair address address) (contract nat) : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CDR;        # contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DROP;       # pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat)
                    # == getBalance ==
                    # if self.data.balances.contains(sp.fst(params)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat)
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat)
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DUP;        # pair address (contract nat) : pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DUG 2;      # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    MEM;        # bool : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    IF
                      {
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat)
                        # sp.result(self.data.balances[sp.fst(params)].balance) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat)
                        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat)
                        DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET 3;      # big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # pair address (contract nat) : pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUG 2;      # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (pair (map address nat) nat) : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:152 # @some : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 152; # int : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CDR;        # nat : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }
                      {
                        # sp.result(0) # pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        PUSH nat 0; # nat : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }; # nat : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # sp.transfer(__s121.value, sp.tez(0), sp.snd(params)) # nat : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    NIL operation; # list operation : nat : pair address (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DIG 2;      # pair address (contract nat) : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CDR;        # contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
          }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # == getBalanceAt ==
                # sp.verify(sp.fst(params).level < sp.level, 'FA1.2_BlockNotFinalized') # pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUP;        # pair (pair address nat) (contract nat) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CAR;        # pair address nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CDR;        # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                LEVEL;      # @level : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                COMPARE;    # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                GT;         # bool : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                IF
                  {}
                  {
                    PUSH string "FA1.2_BlockNotFinalized"; # string : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    FAILWITH;   # FAILED
                  }; # pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                # if ~ (self.data.snapshots.contains(sp.fst(params).address)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                SWAP;       # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUP;        # pair (pair address nat) (contract nat) : pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUG 2;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CAR;        # address : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                MEM;        # bool : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                IF
                  {
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if sp.fst(params).level >= self.data.snapshots[sp.fst(params).address][sp.as_nat(sp.len(self.data.snapshots[sp.fst(params).address]) - 1)].level: # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address nat) (contract nat) : pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:206 # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 206; # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PUSH nat 1; # nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 4;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:206 # @some : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 206; # int : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SIZE;       # nat : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SUB;        # int : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ISNAT;      # option nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 209; # int : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair nat nat) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:209 # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 209; # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address nat) (contract nat) : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address nat) (contract nat) : pair (pair address nat) (contract nat) : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address nat) (contract nat) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GE;         # bool : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DROP;       # pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat)
                        # sp.result(self.data.snapshots[sp.fst(params).address][sp.as_nat(sp.len(self.data.snapshots[sp.fst(params).address]) - 1)].balance) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat)
                        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat)
                        DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # pair (pair address nat) (contract nat) : pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUG 2;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (map nat (pair nat nat)) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:206 # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 206; # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        PUSH nat 1; # nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CDR;        # big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 4;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (map nat (pair nat nat)) : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:206 # @some : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 206; # int : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SIZE;       # nat : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SUB;        # int : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        ISNAT;      # option nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {}
                          {
                            PUSH int 210; # int : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (pair nat nat) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:210 # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 210; # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CDR;        # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }
                      {
                        # low = sp.local("low", 0) # pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH nat 0; # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # high = sp.local("high", sp.as_nat(sp.len(self.data.snapshots[sp.fst(params).address]) - 2)) # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH nat 2; # nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CDR;        # big_map address (map nat (pair nat nat)) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : big_map address (map nat (pair nat nat)) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (map nat (pair nat nat)) : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:206 # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 206; # int : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SIZE;       # nat : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SUB;        # int : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        ISNAT;      # option nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {}
                          {
                            PUSH int 214; # int : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # mid = sp.local("mid", 0) # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH nat 0; # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # while (low.value < high.value) & (self.data.snapshots[sp.fst(params).address][mid.value].level != sp.fst(params).level) : ... # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP;        # @some : @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUG 2;      # @some : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # nat : @some : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        LT;         # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF
                          {
                            DUP 4;      # pair (pair address nat) (contract nat) : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair address nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:206 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 206; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # nat : @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (pair nat nat) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:217 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 217; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # nat : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            NEQ;        # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH bool False; # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }; # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        LOOP
                          {
                            DROP;       # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # mid.value = ((low.value + high.value) + 1) // 2 # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            PUSH nat 2; # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            PUSH nat 1; # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 5;      # nat : @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            ADD;        # nat : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            ADD;        # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            EDIV;       # option (pair nat nat) : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                CAR;        # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 218; # int : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # if self.data.snapshots[sp.fst(params).address][mid.value].level > sp.fst(params).level: # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 4;      # pair (pair address nat) (contract nat) : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair address nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:206 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 206; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # nat : @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (pair nat nat) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:219 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 219; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # nat : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GT;         # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF
                              {
                                SWAP;       # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DROP;       # nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                # high.value = sp.as_nat(mid.value - 1) # nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP;        # nat : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                PUSH nat 1; # nat : nat : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                SWAP;       # nat : nat : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                SUB;        # int : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                ISNAT;      # option nat : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                IF_SOME
                                  {}
                                  {
                                    PUSH int 220; # int : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                SWAP;       # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {}; # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # if self.data.snapshots[sp.fst(params).address][mid.value].level < sp.fst(params).level: # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 4;      # pair (pair address nat) (contract nat) : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair address nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:206 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 206; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # nat : @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (pair nat nat) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:221 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 221; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # nat : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            LT;         # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF
                              {
                                DIG 2;      # nat : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DROP;       # nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                # low.value = mid.value # nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP;        # nat : nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUG 2;      # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {}; # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            SWAP;       # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # check for next loop: (low.value < high.value) & (self.data.snapshots[sp.fst(params).address][mid.value].level != sp.fst(params).level) # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP;        # @some : @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUG 2;      # @some : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 4;      # nat : @some : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            LT;         # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF
                              {
                                DUP 4;      # pair (pair address nat) (contract nat) : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # pair address nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CDR;        # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP 6;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CDR;        # big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP 6;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # address : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                GET;        # option (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                IF_SOME
                                  {
                                    # of_some: Get-item:206 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                  }
                                  {
                                    PUSH int 206; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP 3;      # nat : @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                GET;        # option (pair nat nat) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                IF_SOME
                                  {
                                    # of_some: Get-item:217 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                  }
                                  {
                                    PUSH int 217; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # nat : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                NEQ;        # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH bool False; # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }; # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }; # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # if self.data.snapshots[sp.fst(params).address][mid.value].level == sp.fst(params).level: # nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # pair (pair address nat) (contract nat) : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair address nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CDR;        # nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CDR;        # big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : big_map address (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (map nat (pair nat nat)) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:206 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 206; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 3;      # nat : @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (pair nat nat) : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:223 # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 223; # int : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # nat : nat : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        COMPARE;    # int : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        EQ;         # bool : nat : @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF
                          {
                            SWAP;       # @some : nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DROP;       # nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            SWAP;       # nat : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DROP;       # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DIG 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            DROP;       # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            # sp.result(self.data.snapshots[sp.fst(params).address][mid.value].balance) # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CDR;        # big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            DUP 3;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            GET;        # option (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            IF_SOME
                              {
                                # of_some: Get-item:206 # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                              }
                              {
                                PUSH int 206; # int : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                                FAILWITH;   # FAILED
                              }; # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            SWAP;       # nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            GET;        # option (pair nat nat) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            IF_SOME
                              {
                                # of_some: Get-item:224 # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                              }
                              {
                                PUSH int 224; # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                                FAILWITH;   # FAILED
                              }; # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CDR;        # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            DROP 2;     # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DIG 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            DROP;       # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            # sp.result(self.data.snapshots[sp.fst(params).address][low.value].balance) # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CDR;        # big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            DUP 3;      # pair (pair address nat) (contract nat) : big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CAR;        # pair address nat : big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            GET;        # option (map nat (pair nat nat)) : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            IF_SOME
                              {
                                # of_some: Get-item:206 # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                              }
                              {
                                PUSH int 206; # int : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                                FAILWITH;   # FAILED
                              }; # @some : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            SWAP;       # nat : @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            GET;        # option (pair nat nat) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            IF_SOME
                              {
                                # of_some: Get-item:226 # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                              }
                              {
                                PUSH int 226; # int : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                                FAILWITH;   # FAILED
                              }; # @some : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            CDR;        # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }; # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }; # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DROP;       # pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # sp.result(0) # pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PUSH nat 0; # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                # sp.transfer(__s122.value, sp.tez(0), sp.snd(params)) # nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                NIL operation; # list operation : nat : pair (pair address nat) (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DIG 2;      # pair (pair address nat) (contract nat) : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CDR;        # contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DIG 3;      # nat : mutez : contract nat : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair unit (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DROP;       # pair unit (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract nat)
                    # == getTotalSupply ==
                    # sp.result(self.data.totalSupply) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract nat)
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract nat)
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair unit (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    GET 6;      # nat : pair unit (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # sp.transfer(__s123.value, sp.tez(0), sp.snd(params)) # nat : pair unit (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    NIL operation; # list operation : nat : pair unit (contract nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DIG 2;      # pair unit (contract nat) : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CDR;        # contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # == mint ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SENDER;     # @sender : address : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EQ;         # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # sp.verify(~ self.data.mintingDisabled, 'FA1.2_MintingDisabled') # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        PUSH string "FA1.2_MintingDisabled"; # string : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }
                      {}; # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if ~ (self.data.balances.contains(params.address)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair address nat : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address nat : pair address nat : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair address nat : big_map address (pair (map address nat) nat) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    MEM;        # bool : pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # pair address nat : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.balances[params.address].balance += params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 6;      # pair address nat : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 236; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 8;      # pair address nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.totalSupply += params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 6;      # nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # pair address nat : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ADD;        # nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 6;   # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # y124 = sp.local("y124", self.takeSnapshot(sp.record(in_param = params.address, in_storage = self.data))) # pair address nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EXEC;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # self.data = y124.value.storage # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    GET 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    SWAP;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # for op in y124.value.operations.rev(): ... # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                DROP;       # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                # == setAdministrator ==
                # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # address : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SENDER;     # @sender : address : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                COMPARE;    # int : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                EQ;         # bool : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                # self.data.administrator = params # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : address
                CDR;        # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : address
                DIG 2;      # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }
              {
                IF_LEFT
                  {
                    # == transfer ==
                    # sp.verify((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value), 'FA1.2_NotAllowed') # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SENDER;     # @sender : address : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EQ;         # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        PUSH bool True; # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 4;      # nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 3;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:106 # @some : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 106; # int : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # map address nat : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SENDER;     # @sender : map address nat : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option nat : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:106 # @some : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 106; # int : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        COMPARE;    # int : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GE;         # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAllowed"; # string : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # sp.verify(params.from_ != params.to_, 'FA1.2_SelfTransferNotAllowed') # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair address (pair address nat) : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair address (pair address nat) : address : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : address : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    NEQ;        # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_SelfTransferNotAllowed"; # string : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if ~ (self.data.balances.contains(params.from_)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    MEM;        # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # self.data.balances[params.from_] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # pair address (pair address nat) : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if ~ (self.data.balances.contains(params.to_)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    MEM;        # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # self.data.balances[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # pair address (pair address nat) : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # sp.verify(self.data.balances[params.from_].balance >= params.value, 'FA1.2_InsufficientBalance') # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:116 # @some : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 116; # int : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GE;         # bool : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_InsufficientBalance"; # string : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 6;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 118; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 7;      # pair address (pair address nat) : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DIG 8;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 9;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:119 # @some : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 119; # int : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 118; # int : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.balances[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 6;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 121; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 8;      # pair address (pair address nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # y125 = sp.local("y125", self.takeSnapshot(sp.record(in_param = params.from_, in_storage = self.data))) # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 3;      # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EXEC;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data = y125.value.storage # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # for op in y125.value.operations.rev(): ... # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # y126 = sp.local("y126", self.takeSnapshot(sp.record(in_param = params.to_, in_storage = self.data))) # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 5;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DIG 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 5;      # pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EXEC;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data = y126.value.storage # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 4;      # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # for op in y126.value.operations.rev(): ... # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    NIL operation; # list operation : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # list operation : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ITER
                      {
                        CONS;       # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ITER
                      {
                        # sp.operations().push(op) # operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DIG 2;      # list operation : operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # operation : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CONS;       # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DROP;       # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DROP;       # list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if params.from_ != sp.sender: # list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SENDER;     # @sender : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # pair address (pair address nat) : @sender : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : @sender : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    NEQ;        # bool : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        DIG 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DROP;       # list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 7;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {}
                          {
                            PUSH int 130; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 9;      # pair address (pair address nat) : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DIG 10;     # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat)
                        CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat)
                        GET 3;      # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair address nat)
                        DIG 10;     # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        IF_SOME
                          {
                            # of_some: Get-item:131 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                          }
                          {
                            PUSH int 131; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        IF_SOME
                          {
                            # of_some: Get-item:131 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                          }
                          {
                            PUSH int 131; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        IF_SOME
                          {}
                          {
                            PUSH int 130; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                            FAILWITH;   # FAILED
                          }; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                        SWAP;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }
                      {
                        SWAP;       # pair address (pair address nat) : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DROP;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DROP;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    DROP;       # pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes
                    # == update_metadata ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # address : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SENDER;     # @sender : address : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    COMPARE;    # int : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    EQ;         # bool : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        FAILWITH;   # FAILED
                      }; # pair string bytes : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes
                    # self.data.metadata[params.key] = params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    SWAP;       # big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    DUP 5;      # pair string bytes : big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    CDR;        # bytes : big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    SOME;       # option bytes : big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair string bytes
                    DIG 5;      # pair string bytes : option bytes : big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    CAR;        # string : option bytes : big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    UPDATE;     # big_map string bytes : big_map address (pair (map address nat) nat) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    SWAP;       # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
          }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    NIL operation; # list operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    SWAP;       # list operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    ITER
      {
        CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    PAIR;       # pair (list operation) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
  };