parameter (or (or (or (pair %approve (address %spender) (nat %value)) (unit %disableMint)) (or (pair %getAdministrator unit (contract address)) (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (pair %getBalance address (contract nat))))) (or (or (pair %getBalanceAt (pair (address %address) (nat %level)) (contract nat)) (or (pair %getTotalSupply unit (contract nat)) (pair %mint (address %address) (nat %value)))) (or (address %setAdministrator) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (pair %update_metadata (string %key) (bytes %value))))));
storage   (pair (pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))));
code
  {
    # Global variable: takeSnapshot # pair @parameter @storage
    LAMBDA
      (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
      (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
      {
        # __operations__ = sp.local("__operations__", sp.list([]), sp.TList(sp.TOperation)) # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        NIL operation; # list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SWAP;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
        # __storage__ = sp.local("__storage__", lparams_0.in_storage, sp.TRecord(administrator = sp.TAddress, balances = sp.TBigMap(sp.TAddress, sp.TRecord(approvals = sp.TMap(sp.TAddress, sp.TNat), balance = sp.TNat).layout(("approvals", "balance"))), metadata = sp.TBigMap(sp.TString, sp.TBytes), mintingDisabled = sp.TBool, snapshots = sp.TBigMap(sp.TAddress, sp.TMap(sp.TNat, sp.TRecord(balance = sp.TNat, level = sp.TNat).layout(("level", "balance")))), token_metadata = sp.TBigMap(sp.TNat, sp.TRecord(token_id = sp.TNat, token_info = sp.TMap(sp.TString, sp.TBytes)).layout(("token_id", "token_info"))), totalSupply = sp.TNat).layout((("administrator", ("balances", "metadata")), (("mintingDisabled", "snapshots"), ("token_metadata", "totalSupply"))))) # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
        DUP;        # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
        DUG 2;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        # if ~ (self.data.snapshots.contains(lparams_0.in_param)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 4;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # address : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        MEM;        # bool : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF
          {}
          {
            # self.data.snapshots[lparams_0.in_param] = {0 : sp.record(level = 0, balance = 0)} # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PUSH (option (map nat (pair nat nat))) (Some {Elt 0 (Pair 0 0)}); # option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 7;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UPDATE;     # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        # if self.data.snapshots[lparams_0.in_param][sp.as_nat(sp.len(self.data.snapshots[lparams_0.in_param]) - 1)].level == sp.level: # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        LEVEL;      # @level : big_map address (map nat (pair nat nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SWAP;       # big_map address (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 5;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # address : big_map address (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET;        # option (map nat (pair nat nat)) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {
            # of_some: Get-item:175 # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            PUSH int 175; # int : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        PUSH nat 1; # nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CDR;        # big_map address (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 7;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # address : big_map address (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET;        # option (map nat (pair nat nat)) : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {
            # of_some: Get-item:175 # @some : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            PUSH int 175; # int : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SIZE;       # nat : nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        SUB;        # int : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        ISNAT;      # option nat : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {}
          {
            PUSH int 179; # int : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET;        # option (pair nat nat) : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF_SOME
          {
            # of_some: Get-item:179 # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            PUSH int 179; # int : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            FAILWITH;   # FAILED
          }; # @some : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        CAR;        # nat : @level : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        COMPARE;    # int : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        EQ;         # bool : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF
          {
            # self.data.snapshots[lparams_0.in_param][sp.as_nat(sp.len(self.data.snapshots[lparams_0.in_param]) - 1)].balance = self.data.balances[lparams_0.in_param].balance # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 8;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # address : address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUG 2;      # address : big_map address (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 180; # int : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PUSH nat 1; # nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 9;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CDR;        # big_map address (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 12;     # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (map nat (pair nat nat)) : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {
                # of_some: Get-item:175 # @some : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                PUSH int 175; # int : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SIZE;       # nat : nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SUB;        # int : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            ISNAT;      # option nat : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 180; # int : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUG 2;      # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (pair nat nat) : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 180; # int : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 8;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # big_map address (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 10;     # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            CAR;        # address : big_map address (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            GET;        # option (pair (map address nat) nat) : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            IF_SOME
              {
                # of_some: Get-item:180 # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
              }
              {
                PUSH int 180; # int : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
                FAILWITH;   # FAILED
              }; # @some : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            CDR;        # nat : @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE 2;   # @some : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SOME;       # option (pair nat nat) : @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # @some : option (pair nat nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # map nat (pair nat nat) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SOME;       # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # address : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
            PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
          }
          {
            # self.data.snapshots[lparams_0.in_param][sp.len(self.data.snapshots[lparams_0.in_param])] = sp.record(level = sp.level, balance = self.data.balances[lparams_0.in_param].balance) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            UNPAIR;     # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SWAP;       # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 8;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP;        # address : address : big_map address (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUG 2;      # address : big_map address (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {}
              {
                PUSH int 182; # int : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 7;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # big_map address (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 10;     # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : big_map address (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (pair (map address nat) nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_SOME
              {
                # of_some: Get-item:183 # @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                PUSH int 183; # int : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }; # @some : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CDR;        # nat : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            LEVEL;      # @level : nat : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair @level nat : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            SOME;       # option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 7;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # pair bool (big_map address (map nat (pair nat nat))) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            CDR;        # big_map address (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation : pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 9;      # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            CAR;        # address : big_map address (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            GET;        # option (map nat (pair nat nat)) : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            IF_SOME
              {
                # of_some: Get-item:175 # @some : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
              }
              {
                PUSH int 175; # int : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
                FAILWITH;   # FAILED
              }; # @some : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SIZE;       # nat : option (pair @level nat) : @some : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # map nat (pair nat nat) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SOME;       # option (map nat (pair nat nat)) : address : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # address : option (map nat (pair nat nat)) : big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            UPDATE;     # big_map address (map nat (pair nat nat)) : bool : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # bool : big_map address (map nat (pair nat nat)) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair bool (big_map address (map nat (pair nat nat))) : pair (big_map nat (pair nat (map string bytes))) nat : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            PAIR;       # pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : list operation
            SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
            PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
          }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
        UNIT;       # unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
        # sp.result(sp.record(operations = sp.operations(), result = __s118.value, storage = self.data)) # unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
        DIG 2;      # list operation : unit : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
        PAIR 3;     # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
      }; # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair @parameter @storage
    SWAP;       # pair @parameter @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
    UNPAIR;     # @parameter : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
    IF_LEFT
      {
        IF_LEFT
          {
            DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter.left.left : @storage
            DROP;       # @parameter.left.left : @storage
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%approve
                # == approve ==
                # if ~ (self.data.balances.contains(sp.sender)): # @storage : @parameter%approve
                DUP;        # @storage : @storage : @parameter%approve
                DUG 2;      # @storage : @parameter%approve : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%approve : @storage
                GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                SENDER;     # @sender : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                MEM;        # bool : @parameter%approve : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%approve
                    # self.data.balances[sp.sender] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%approve
                    UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SWAP;       # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                # sp.verify((self.data.balances[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'FA1.2_UnsafeAllowanceChange') # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                PUSH nat 0; # nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET 3;      # big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET;        # option (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF_SOME
                  {
                    # of_some: Get-item:134 # @some : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }
                  {
                    PUSH int 134; # int : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # map address nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                DUP 3;      # @parameter%approve : map address nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # address : map address nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                GET;        # option nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF_SOME
                  {
                    # of_some: Get-item:134 # @some : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }
                  {
                    PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                COMPARE;    # int : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                EQ;         # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {
                    PUSH bool True; # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }
                  {
                    DUP;        # @parameter%approve : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    CDR;        # nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    COMPARE;    # int : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    EQ;         # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # bool : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                IF
                  {}
                  {
                    PUSH string "FA1.2_UnsafeAllowanceChange"; # string : @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    FAILWITH;   # FAILED
                  }; # @parameter%approve : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                # self.data.balances[sp.sender].approvals[params.spender] = params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                IF_SOME
                  {}
                  {
                    PUSH int 136; # int : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                    FAILWITH;   # FAILED
                  }; # @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DUP 8;      # @parameter%approve : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                DIG 8;      # @parameter%approve : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }
              {
                DROP;       # @storage
                # == disableMint ==
                # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # @storage
                DUP;        # @storage : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @storage
                CAR;        # address : @storage
                SENDER;     # @sender : address : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.mintingDisabled = True # @storage
                UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                SWAP;       # pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))
                UNPAIR;     # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))
                CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))
                PUSH bool True; # bool : big_map address (map nat (pair (nat %level) (nat %balance))) : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))
                PAIR;       # pair bool (big_map address (map nat (pair (nat %level) (nat %balance)))) : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))
                PAIR;       # pair (pair bool (big_map address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))
                SWAP;       # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair bool (big_map address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (pair bool (big_map address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }; # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
            NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%getAdministrator : @storage
                DROP;       # @parameter%getAdministrator : @storage
                SWAP;       # @storage : @parameter%getAdministrator
                # == getAdministrator ==
                # sp.result(self.data.administrator) # @storage : @parameter%getAdministrator
                DUP;        # @storage : @storage : @parameter%getAdministrator
                DUG 2;      # @storage : @parameter%getAdministrator : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getAdministrator : @storage
                CAR;        # address : @parameter%getAdministrator : @storage
                # sp.transfer(__s119.value, sp.tez(0), sp.snd(params)) # address : @parameter%getAdministrator : @storage
                NIL operation; # list operation : address : @parameter%getAdministrator : @storage
                DIG 2;      # @parameter%getAdministrator : list operation : address : @storage
                CDR;        # contract address : list operation : address : @storage
                PUSH mutez 0; # mutez : contract address : list operation : address : @storage
                DIG 3;      # address : mutez : contract address : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%getAllowance : @storage
                    DROP;       # @parameter%getAllowance : @storage
                    SWAP;       # @storage : @parameter%getAllowance
                    # == getAllowance ==
                    # if self.data.balances.contains(sp.fst(params).owner): # @storage : @parameter%getAllowance
                    DUP;        # @storage : @storage : @parameter%getAllowance
                    DUG 2;      # @storage : @parameter%getAllowance : @storage
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getAllowance : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                    MEM;        # bool : @parameter%getAllowance : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%getAllowance
                        # sp.result(self.data.balances[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # @storage : @parameter%getAllowance
                        DUP;        # @storage : @storage : @parameter%getAllowance
                        DUG 2;      # @storage : @parameter%getAllowance : @storage
                        CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getAllowance : @storage
                        GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                        SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                        CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:152 # @some : @parameter%getAllowance : @storage
                          }
                          {
                            PUSH int 152; # int : @parameter%getAllowance : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%getAllowance : @storage
                        CAR;        # map address nat : @parameter%getAllowance : @storage
                        SWAP;       # @parameter%getAllowance : map address nat : @storage
                        DUP;        # @parameter%getAllowance : @parameter%getAllowance : map address nat : @storage
                        DUG 2;      # @parameter%getAllowance : map address nat : @parameter%getAllowance : @storage
                        CAR;        # pair (address %owner) (address %spender) : map address nat : @parameter%getAllowance : @storage
                        CDR;        # address : map address nat : @parameter%getAllowance : @storage
                        GET;        # option nat : @parameter%getAllowance : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:152 # @some : @parameter%getAllowance : @storage
                          }
                          {
                            PUSH nat 0; # nat : @parameter%getAllowance : @storage
                          }; # nat : @parameter%getAllowance : @storage
                      }
                      {
                        # sp.result(0) # @parameter%getAllowance : @storage
                        PUSH nat 0; # nat : @parameter%getAllowance : @storage
                      }; # nat : @parameter%getAllowance : @storage
                    # sp.transfer(__s120.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getAllowance : @storage
                    NIL operation; # list operation : nat : @parameter%getAllowance : @storage
                    DIG 2;      # @parameter%getAllowance : list operation : nat : @storage
                    CDR;        # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%getBalance : @storage
                    DROP;       # @parameter%getBalance : @storage
                    SWAP;       # @storage : @parameter%getBalance
                    # == getBalance ==
                    # if self.data.balances.contains(sp.fst(params)): # @storage : @parameter%getBalance
                    DUP;        # @storage : @storage : @parameter%getBalance
                    DUG 2;      # @storage : @parameter%getBalance : @storage
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getBalance : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                    MEM;        # bool : @parameter%getBalance : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%getBalance
                        # sp.result(self.data.balances[sp.fst(params)].balance) # @storage : @parameter%getBalance
                        DUP;        # @storage : @storage : @parameter%getBalance
                        DUG 2;      # @storage : @parameter%getBalance : @storage
                        CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%getBalance : @storage
                        GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                        SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:145 # @some : @parameter%getBalance : @storage
                          }
                          {
                            PUSH int 145; # int : @parameter%getBalance : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%getBalance : @storage
                        CDR;        # nat : @parameter%getBalance : @storage
                      }
                      {
                        # sp.result(0) # @parameter%getBalance : @storage
                        PUSH nat 0; # nat : @parameter%getBalance : @storage
                      }; # nat : @parameter%getBalance : @storage
                    # sp.transfer(__s121.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalance : @storage
                    NIL operation; # list operation : nat : @parameter%getBalance : @storage
                    DIG 2;      # @parameter%getBalance : list operation : nat : @storage
                    CDR;        # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : @storage
              }; # list operation : @storage
          }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # == getBalanceAt ==
                # sp.verify(sp.fst(params).level < sp.level, 'FA1.2_BlockNotFinalized') # @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUP;        # @parameter%getBalanceAt : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CAR;        # pair (address %address) (nat %level) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CDR;        # nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                LEVEL;      # @level : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                COMPARE;    # int : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                GT;         # bool : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                IF
                  {}
                  {
                    PUSH string "FA1.2_BlockNotFinalized"; # string : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    FAILWITH;   # FAILED
                  }; # @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                SWAP;       # @storage : @parameter%getBalanceAt : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                # if ~ (self.data.snapshots.contains(sp.fst(params).address)): # @storage : @parameter%getBalanceAt : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUP;        # @storage : @storage : @parameter%getBalanceAt : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUG 2;      # @storage : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                SWAP;       # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUP;        # @parameter%getBalanceAt : @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                DUG 2;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                MEM;        # bool : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                IF
                  {
                    SWAP;       # @storage : @parameter%getBalanceAt : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if sp.fst(params).level >= self.data.snapshots[sp.fst(params).address][sp.as_nat(sp.len(self.data.snapshots[sp.fst(params).address]) - 1)].level: # @storage : @parameter%getBalanceAt : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @storage : @storage : @parameter%getBalanceAt : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @storage : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%getBalanceAt : @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:196 # @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 196; # int : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PUSH nat 1; # nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 4;      # @storage : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 4;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:196 # @some : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 196; # int : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SIZE;       # nat : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SUB;        # int : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ISNAT;      # option nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 199; # int : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (nat %level) (nat %balance)) : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:199 # @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 199; # int : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%getBalanceAt : nat : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%getBalanceAt : @parameter%getBalanceAt : nat : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%getBalanceAt : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair (address %address) (nat %level) : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GE;         # bool : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%getBalanceAt : @storage
                        DROP;       # @parameter%getBalanceAt : @storage
                        SWAP;       # @storage : @parameter%getBalanceAt
                        # sp.result(self.data.snapshots[sp.fst(params).address][sp.as_nat(sp.len(self.data.snapshots[sp.fst(params).address]) - 1)].balance) # @storage : @parameter%getBalanceAt
                        DUP;        # @storage : @storage : @parameter%getBalanceAt
                        DUG 2;      # @storage : @parameter%getBalanceAt : @storage
                        GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : @parameter%getBalanceAt : @storage
                        CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage
                        SWAP;       # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @storage
                        DUP;        # @parameter%getBalanceAt : @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @storage
                        DUG 2;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage
                        CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage
                        CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage
                        GET;        # option (map nat (pair (nat %level) (nat %balance))) : @parameter%getBalanceAt : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:196 # @some : @parameter%getBalanceAt : @storage
                          }
                          {
                            PUSH int 196; # int : @parameter%getBalanceAt : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%getBalanceAt : @storage
                        PUSH nat 1; # nat : @some : @parameter%getBalanceAt : @storage
                        DUP 4;      # @storage : nat : @some : @parameter%getBalanceAt : @storage
                        GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : @some : @parameter%getBalanceAt : @storage
                        CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage
                        DUP 4;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage
                        CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage
                        CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage
                        GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : @some : @parameter%getBalanceAt : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:196 # @some : nat : @some : @parameter%getBalanceAt : @storage
                          }
                          {
                            PUSH int 196; # int : nat : @some : @parameter%getBalanceAt : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @some : @parameter%getBalanceAt : @storage
                        SIZE;       # nat : nat : @some : @parameter%getBalanceAt : @storage
                        SUB;        # int : @some : @parameter%getBalanceAt : @storage
                        ISNAT;      # option nat : @some : @parameter%getBalanceAt : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 200; # int : @some : @parameter%getBalanceAt : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @some : @parameter%getBalanceAt : @storage
                        GET;        # option (pair (nat %level) (nat %balance)) : @parameter%getBalanceAt : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:200 # @some : @parameter%getBalanceAt : @storage
                          }
                          {
                            PUSH int 200; # int : @parameter%getBalanceAt : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%getBalanceAt : @storage
                        CDR;        # nat : @parameter%getBalanceAt : @storage
                      }
                      {
                        # low = sp.local("low", 0) # @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH nat 0; # nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # high = sp.local("high", sp.as_nat(sp.len(self.data.snapshots[sp.fst(params).address]) - 2)) # nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH nat 2; # nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # @storage : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:196 # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 196; # int : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SIZE;       # nat : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SUB;        # int : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        ISNAT;      # option nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {}
                          {
                            PUSH int 204; # int : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # mid = sp.local("mid", 0) # @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH nat 0; # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # while (low.value < high.value) & (self.data.snapshots[sp.fst(params).address][mid.value].level != sp.fst(params).level) : ... # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP;        # @some : @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUG 2;      # @some : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # nat : @some : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        LT;         # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF
                          {
                            DUP 4;      # @parameter%getBalanceAt : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair (address %address) (nat %level) : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # @storage : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:196 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 196; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # nat : @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (pair (nat %level) (nat %balance)) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:207 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 207; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # nat : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            NEQ;        # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH bool False; # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }; # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        LOOP
                          {
                            DROP;       # @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # mid.value = ((low.value + high.value) + 1) // 2 # @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            PUSH nat 2; # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            PUSH nat 1; # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 5;      # nat : @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            ADD;        # nat : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            ADD;        # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            EDIV;       # option (pair nat nat) : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                CAR;        # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 208; # int : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # if self.data.snapshots[sp.fst(params).address][mid.value].level > sp.fst(params).level: # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 4;      # @parameter%getBalanceAt : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair (address %address) (nat %level) : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # @storage : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:196 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 196; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # nat : @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (pair (nat %level) (nat %balance)) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:209 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 209; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # nat : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GT;         # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF
                              {
                                SWAP;       # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DROP;       # nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                # high.value = sp.as_nat(mid.value - 1) # nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP;        # nat : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                PUSH nat 1; # nat : nat : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                SWAP;       # nat : nat : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                SUB;        # int : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                ISNAT;      # option nat : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                IF_SOME
                                  {}
                                  {
                                    PUSH int 210; # int : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                SWAP;       # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {}; # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # if self.data.snapshots[sp.fst(params).address][mid.value].level < sp.fst(params).level: # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 4;      # @parameter%getBalanceAt : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair (address %address) (nat %level) : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # @storage : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 6;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:196 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 196; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 3;      # nat : @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            GET;        # option (pair (nat %level) (nat %balance)) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF_SOME
                              {
                                # of_some: Get-item:211 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH int 211; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                FAILWITH;   # FAILED
                              }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            CAR;        # nat : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            LT;         # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF
                              {
                                DIG 2;      # nat : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DROP;       # nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                # low.value = mid.value # nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP;        # nat : nat : @some : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUG 2;      # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {}; # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            SWAP;       # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            # check for next loop: (low.value < high.value) & (self.data.snapshots[sp.fst(params).address][mid.value].level != sp.fst(params).level) # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP;        # @some : @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUG 2;      # @some : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DUP 4;      # nat : @some : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            LT;         # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            IF
                              {
                                DUP 4;      # @parameter%getBalanceAt : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # pair (address %address) (nat %level) : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CDR;        # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP 6;      # @storage : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP 6;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                IF_SOME
                                  {
                                    # of_some: Get-item:196 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                  }
                                  {
                                    PUSH int 196; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                DUP 3;      # nat : @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                GET;        # option (pair (nat %level) (nat %balance)) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                IF_SOME
                                  {
                                    # of_some: Get-item:207 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                  }
                                  {
                                    PUSH int 207; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                CAR;        # nat : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                                NEQ;        # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }
                              {
                                PUSH bool False; # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                              }; # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }; # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # if self.data.snapshots[sp.fst(params).address][mid.value].level == sp.fst(params).level: # nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 4;      # @parameter%getBalanceAt : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair (address %address) (nat %level) : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CDR;        # nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # @storage : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:196 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 196; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 3;      # nat : @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (pair (nat %level) (nat %balance)) : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:213 # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 213; # int : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # nat : nat : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        COMPARE;    # int : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        EQ;         # bool : nat : @some : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF
                          {
                            SWAP;       # @some : nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DROP;       # nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            SWAP;       # nat : nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DROP;       # nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DIG 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : nat : @parameter%getBalanceAt : @storage
                            DROP;       # nat : @parameter%getBalanceAt : @storage
                            # sp.result(self.data.snapshots[sp.fst(params).address][mid.value].balance) # nat : @parameter%getBalanceAt : @storage
                            DUP 3;      # @storage : nat : @parameter%getBalanceAt : @storage
                            GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : @parameter%getBalanceAt : @storage
                            CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            DUP 3;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:196 # @some : nat : @parameter%getBalanceAt : @storage
                              }
                              {
                                PUSH int 196; # int : nat : @parameter%getBalanceAt : @storage
                                FAILWITH;   # FAILED
                              }; # @some : nat : @parameter%getBalanceAt : @storage
                            SWAP;       # nat : @some : @parameter%getBalanceAt : @storage
                            GET;        # option (pair (nat %level) (nat %balance)) : @parameter%getBalanceAt : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:214 # @some : @parameter%getBalanceAt : @storage
                              }
                              {
                                PUSH int 214; # int : @parameter%getBalanceAt : @storage
                                FAILWITH;   # FAILED
                              }; # @some : @parameter%getBalanceAt : @storage
                            CDR;        # nat : @parameter%getBalanceAt : @storage
                          }
                          {
                            DROP 2;     # nat : @parameter%getBalanceAt : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            DIG 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : nat : @parameter%getBalanceAt : @storage
                            DROP;       # nat : @parameter%getBalanceAt : @storage
                            # sp.result(self.data.snapshots[sp.fst(params).address][low.value].balance) # nat : @parameter%getBalanceAt : @storage
                            DUP 3;      # @storage : nat : @parameter%getBalanceAt : @storage
                            GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : nat : @parameter%getBalanceAt : @storage
                            CDR;        # big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            DUP 3;      # @parameter%getBalanceAt : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            CAR;        # pair (address %address) (nat %level) : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            CAR;        # address : big_map address (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            GET;        # option (map nat (pair (nat %level) (nat %balance))) : nat : @parameter%getBalanceAt : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:196 # @some : nat : @parameter%getBalanceAt : @storage
                              }
                              {
                                PUSH int 196; # int : nat : @parameter%getBalanceAt : @storage
                                FAILWITH;   # FAILED
                              }; # @some : nat : @parameter%getBalanceAt : @storage
                            SWAP;       # nat : @some : @parameter%getBalanceAt : @storage
                            GET;        # option (pair (nat %level) (nat %balance)) : @parameter%getBalanceAt : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:216 # @some : @parameter%getBalanceAt : @storage
                              }
                              {
                                PUSH int 216; # int : @parameter%getBalanceAt : @storage
                                FAILWITH;   # FAILED
                              }; # @some : @parameter%getBalanceAt : @storage
                            CDR;        # nat : @parameter%getBalanceAt : @storage
                          }; # nat : @parameter%getBalanceAt : @storage
                      }; # nat : @parameter%getBalanceAt : @storage
                  }
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%getBalanceAt : @storage
                    DROP;       # @parameter%getBalanceAt : @storage
                    # sp.result(0) # @parameter%getBalanceAt : @storage
                    PUSH nat 0; # nat : @parameter%getBalanceAt : @storage
                  }; # nat : @parameter%getBalanceAt : @storage
                # sp.transfer(__s122.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalanceAt : @storage
                NIL operation; # list operation : nat : @parameter%getBalanceAt : @storage
                DIG 2;      # @parameter%getBalanceAt : list operation : nat : @storage
                CDR;        # contract nat : list operation : nat : @storage
                PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                DIG 3;      # nat : mutez : contract nat : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%getTotalSupply : @storage
                    DROP;       # @parameter%getTotalSupply : @storage
                    SWAP;       # @storage : @parameter%getTotalSupply
                    # == getTotalSupply ==
                    # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                    DUP;        # @storage : @storage : @parameter%getTotalSupply
                    DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                    GET 6;      # nat : @parameter%getTotalSupply : @storage
                    # sp.transfer(__s123.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                    NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                    DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                    CDR;        # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    SWAP;       # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # == mint ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @storage : @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @storage : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SENDER;     # @sender : address : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EQ;         # bool : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # sp.verify(~ self.data.mintingDisabled, 'FA1.2_MintingDisabled') # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @storage : @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @storage : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance)))) : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # bool : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        PUSH string "FA1.2_MintingDisabled"; # string : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if ~ (self.data.balances.contains(params.address)): # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @storage : @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @storage : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    MEM;        # bool : @parameter%mint : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # @parameter%mint : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # @parameter%mint : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # @parameter%mint : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.balances[params.address].balance += params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 6;      # @parameter%mint : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 226; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 8;      # @parameter%mint : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.totalSupply += params.value # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 6;      # nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # @parameter%mint : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ADD;        # nat : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 6;   # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%mint : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # y124 = sp.local("y124", self.takeSnapshot(sp.record(in_param = params.address, in_storage = self.data))) # @parameter%mint : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EXEC;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # self.data = y124.value.storage # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    GET 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))
                    SWAP;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    # for op in y124.value.operations.rev(): ... # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    CAR;        # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%setAdministrator : @storage
                DROP;       # @parameter%setAdministrator : @storage
                SWAP;       # @storage : @parameter%setAdministrator
                # == setAdministrator ==
                # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # @storage : @parameter%setAdministrator
                DUP;        # @storage : @storage : @parameter%setAdministrator
                DUG 2;      # @storage : @parameter%setAdministrator : @storage
                CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%setAdministrator : @storage
                CAR;        # address : @parameter%setAdministrator : @storage
                SENDER;     # @sender : address : @parameter%setAdministrator : @storage
                COMPARE;    # int : @parameter%setAdministrator : @storage
                EQ;         # bool : @parameter%setAdministrator : @storage
                IF
                  {}
                  {
                    PUSH string "FA1.2_NotAdmin"; # string : @parameter%setAdministrator : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%setAdministrator : @storage
                SWAP;       # @storage : @parameter%setAdministrator
                # self.data.administrator = params # @storage : @parameter%setAdministrator
                UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                CDR;        # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                DIG 2;      # @parameter%setAdministrator : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair @parameter%setAdministrator (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                PAIR;       # pair (pair @parameter%setAdministrator (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                NIL operation; # list operation : pair (pair @parameter%setAdministrator (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
              }
              {
                IF_LEFT
                  {
                    # == transfer ==
                    # sp.verify((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value), 'FA1.2_NotAllowed') # @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SENDER;     # @sender : address : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EQ;         # bool : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        PUSH bool True; # bool : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        DUP;        # @parameter%transfer : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 4;      # nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 3;      # @storage : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:102 # @some : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 102; # int : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # map address nat : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SENDER;     # @sender : map address nat : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET;        # option nat : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        IF_SOME
                          {
                            # of_some: Get-item:102 # @some : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                          }
                          {
                            PUSH int 102; # int : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        COMPARE;    # int : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GE;         # bool : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # bool : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAllowed"; # string : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # sp.verify(params.from_ != params.to_, 'FA1.2_SelfTransferNotAllowed') # @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%transfer : address : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : address : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%transfer : address : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : address : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    NEQ;        # bool : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_SelfTransferNotAllowed"; # string : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @storage : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if ~ (self.data.balances.contains(params.from_)): # @storage : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @storage : @storage : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @storage : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    MEM;        # bool : @parameter%transfer : @storage : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # self.data.balances[params.from_] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if ~ (self.data.balances.contains(params.to_)): # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%transfer : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    MEM;        # bool : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        # self.data.balances[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # sp.verify(self.data.balances[params.from_].balance >= params.value, 'FA1.2_InsufficientBalance') # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:112 # @some : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 112; # int : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GE;         # bool : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_InsufficientBalance"; # string : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 114; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 7;      # @parameter%transfer : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DIG 8;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {
                        # of_some: Get-item:115 # @some : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }
                      {
                        PUSH int 115; # int : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 114; # int : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data.balances[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF_SOME
                      {}
                      {
                        PUSH int 117; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 8;      # @parameter%transfer : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # y125 = sp.local("y125", self.takeSnapshot(sp.record(in_param = params.from_, in_storage = self.data))) # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 3;      # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EXEC;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data = y125.value.storage # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 2;      # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # for op in y125.value.operations.rev(): ... # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # y126 = sp.local("y126", self.takeSnapshot(sp.record(in_param = params.to_, in_storage = self.data))) # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 5;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DIG 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 5;      # @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 3;      # address : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    PAIR;       # pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    EXEC;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # self.data = y126.value.storage # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    GET 4;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUG 4;      # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # for op in y126.value.operations.rev(): ... # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP;        # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    NIL operation; # list operation : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # list operation : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ITER
                      {
                        CONS;       # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    ITER
                      {
                        # sp.operations().push(op) # operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DIG 2;      # list operation : operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # operation : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        CONS;       # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        SWAP;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                      }; # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DROP;       # list operation : pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SWAP;       # pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DROP;       # list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    # if params.from_ != sp.sender: # list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    SENDER;     # @sender : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    DUP 3;      # @parameter%transfer : @sender : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CAR;        # address : @sender : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    COMPARE;    # int : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    NEQ;        # bool : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    IF
                      {
                        DIG 3;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DROP;       # list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 3;      # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UNPAIR;     # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UNPAIR;     # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UNPAIR;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 7;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {}
                          {
                            PUSH int 126; # int : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DUP 9;      # @parameter%transfer : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DIG 10;     # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer
                        CAR;        # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer
                        GET 3;      # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%transfer
                        DIG 10;     # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        IF_SOME
                          {
                            # of_some: Get-item:127 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                          }
                          {
                            PUSH int 127; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        IF_SOME
                          {
                            # of_some: Get-item:127 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                          }
                          {
                            PUSH int 127; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        IF_SOME
                          {}
                          {
                            PUSH int 126; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                            FAILWITH;   # FAILED
                          }; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        UPDATE;     # big_map address (pair (map address nat) nat) : big_map string bytes : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        PAIR;       # pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : address : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        SWAP;       # address : pair (big_map address (pair (map address nat) nat)) (big_map string bytes) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        PAIR;       # pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes)) : pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation
                        PAIR;       # pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                        SWAP;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }
                      {
                        SWAP;       # @parameter%transfer : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DROP;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)) : lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))))
                        DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        DROP;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
                  }
                  {
                    DIG 2;      # lambda (pair address (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))) (pair (list operation) (pair unit (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%update_metadata : @storage
                    DROP;       # @parameter%update_metadata : @storage
                    SWAP;       # @storage : @parameter%update_metadata
                    # == update_metadata ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # @storage : @parameter%update_metadata
                    DUP;        # @storage : @storage : @parameter%update_metadata
                    DUG 2;      # @storage : @parameter%update_metadata : @storage
                    CAR;        # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : @parameter%update_metadata : @storage
                    CAR;        # address : @parameter%update_metadata : @storage
                    SENDER;     # @sender : address : @parameter%update_metadata : @storage
                    COMPARE;    # int : @parameter%update_metadata : @storage
                    EQ;         # bool : @parameter%update_metadata : @storage
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : @parameter%update_metadata : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%update_metadata : @storage
                    SWAP;       # @storage : @parameter%update_metadata
                    # self.data.metadata[params.key] = params.value # @storage : @parameter%update_metadata
                    UNPAIR;     # pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    UNPAIR;     # address : pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    SWAP;       # pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (big_map %metadata string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    UNPAIR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    SWAP;       # big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    DUP 5;      # @parameter%update_metadata : big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    CDR;        # bytes : big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    SOME;       # option bytes : big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%update_metadata
                    DIG 5;      # @parameter%update_metadata : option bytes : big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    CAR;        # string : option bytes : big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    UPDATE;     # big_map string bytes : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map string bytes : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    PAIR;       # pair (big_map address (pair (map %approvals address nat) (nat %balance))) (big_map string bytes) : address : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    SWAP;       # address : pair (big_map address (pair (map %approvals address nat) (nat %balance))) (big_map string bytes) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    PAIR;       # pair address (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                    PAIR;       # pair (pair address (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    NIL operation; # list operation : pair (pair address (pair (big_map address (pair (map %approvals address nat) (nat %balance))) (big_map string bytes))) (pair (pair (bool %mintingDisabled) (big_map %snapshots address (map nat (pair (nat %level) (nat %balance))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                  }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
              }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
          }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    NIL operation; # list operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    SWAP;       # list operation : list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    ITER
      {
        CONS;       # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
      }; # list operation : pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat))
    PAIR;       # pair (list operation) (pair (pair address (pair (big_map address (pair (map address nat) nat)) (big_map string bytes))) (pair (pair bool (big_map address (map nat (pair nat nat)))) (pair (big_map nat (pair nat (map string bytes))) nat)))
  };